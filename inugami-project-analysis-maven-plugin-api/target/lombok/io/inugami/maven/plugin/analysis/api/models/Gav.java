// Generated by delombok at Mon Mar 08 22:38:41 CET 2021
package io.inugami.maven.plugin.analysis.api.models;

import io.inugami.api.models.data.basic.JsonObject;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

public class Gav implements JsonObject, Comparable<Gav> {
    // =========================================================================
    // ATTRIBUTES
    // =========================================================================
    private static final long serialVersionUID = -1609343378801778104L;
    private final String groupId;
    private final String artifactId;
    private final String version;
    private final String hash;
    private final String type;
    private final Set<Gav> dependencies;
    private Gav parent;

    // =========================================================================
    // CONSTRUCTORS
    // =========================================================================
    public Gav(final String groupId, final String artifactId, final String version, final String hash, final String type, final Set<Gav> dependencies, final Gav parent) {
        this.groupId = groupId;
        this.artifactId = artifactId;
        this.version = version;
        this.type = type;
        this.dependencies = dependencies == null ? new LinkedHashSet<>() : dependencies;
        this.hash = String.join(":", List.of(String.valueOf(groupId), String.valueOf(artifactId), String.valueOf(version), String.valueOf(type)));
        this.parent = parent;
    }

    @Override
    public int compareTo(final Gav other) {
        return hash.compareTo(String.valueOf(other == null ? null : other.getHash()));
    }

    public Gav addDependency(final Gav gav) {
        if (gav != null) {
            dependencies.add(gav);
        }
        return this;
    }

    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder("Gav{");
        sb.append(hash).append('\'');
        sb.append('}');
        return sb.toString();
    }

    public void addDependencies(final List<Gav> values) {
        if (values != null) {
            dependencies.addAll(values);
        }
    }


    @java.lang.SuppressWarnings("all")
    public static class GavBuilder {
        @java.lang.SuppressWarnings("all")
        private String groupId;
        @java.lang.SuppressWarnings("all")
        private String artifactId;
        @java.lang.SuppressWarnings("all")
        private String version;
        @java.lang.SuppressWarnings("all")
        private String hash;
        @java.lang.SuppressWarnings("all")
        private String type;
        @java.lang.SuppressWarnings("all")
        private Set<Gav> dependencies;
        @java.lang.SuppressWarnings("all")
        private Gav parent;

        @java.lang.SuppressWarnings("all")
        GavBuilder() {
        }

        @java.lang.SuppressWarnings("all")
        public Gav.GavBuilder groupId(final String groupId) {
            this.groupId = groupId;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public Gav.GavBuilder artifactId(final String artifactId) {
            this.artifactId = artifactId;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public Gav.GavBuilder version(final String version) {
            this.version = version;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public Gav.GavBuilder hash(final String hash) {
            this.hash = hash;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public Gav.GavBuilder type(final String type) {
            this.type = type;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public Gav.GavBuilder dependencies(final Set<Gav> dependencies) {
            this.dependencies = dependencies;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public Gav.GavBuilder parent(final Gav parent) {
            this.parent = parent;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public Gav build() {
            return new Gav(this.groupId, this.artifactId, this.version, this.hash, this.type, this.dependencies, this.parent);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "Gav.GavBuilder(groupId=" + this.groupId + ", artifactId=" + this.artifactId + ", version=" + this.version + ", hash=" + this.hash + ", type=" + this.type + ", dependencies=" + this.dependencies + ", parent=" + this.parent + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static Gav.GavBuilder builder() {
        return new Gav.GavBuilder();
    }

    @java.lang.SuppressWarnings("all")
    public Gav.GavBuilder toBuilder() {
        return new Gav.GavBuilder().groupId(this.groupId).artifactId(this.artifactId).version(this.version).hash(this.hash).type(this.type).dependencies(this.dependencies).parent(this.parent);
    }

    @java.lang.SuppressWarnings("all")
    public void setParent(final Gav parent) {
        this.parent = parent;
    }

    @java.lang.SuppressWarnings("all")
    public String getGroupId() {
        return this.groupId;
    }

    @java.lang.SuppressWarnings("all")
    public String getArtifactId() {
        return this.artifactId;
    }

    @java.lang.SuppressWarnings("all")
    public String getVersion() {
        return this.version;
    }

    @java.lang.SuppressWarnings("all")
    public String getHash() {
        return this.hash;
    }

    @java.lang.SuppressWarnings("all")
    public String getType() {
        return this.type;
    }

    @java.lang.SuppressWarnings("all")
    public Set<Gav> getDependencies() {
        return this.dependencies;
    }

    @java.lang.SuppressWarnings("all")
    public Gav getParent() {
        return this.parent;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Gav)) return false;
        final Gav other = (Gav) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$hash = this.getHash();
        final java.lang.Object other$hash = other.getHash();
        if (this$hash == null ? other$hash != null : !this$hash.equals(other$hash)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Gav;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $hash = this.getHash();
        result = result * PRIME + ($hash == null ? 43 : $hash.hashCode());
        return result;
    }
}
