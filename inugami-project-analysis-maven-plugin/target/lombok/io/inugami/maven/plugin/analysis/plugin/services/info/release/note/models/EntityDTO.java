// Generated by delombok at Mon Mar 08 22:38:55 CET 2021
/* --------------------------------------------------------------------
 *  Inugami
 * --------------------------------------------------------------------
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package io.inugami.maven.plugin.analysis.plugin.services.info.release.note.models;

import io.inugami.api.models.data.basic.JsonObject;
import lombok.*;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

public class EntityDTO implements Comparable<EntityDTO>, JsonObject {
    // =========================================================================
    // ATTRIBUTES
    // =========================================================================
    private String name;
    private String payload;
    private Set<String> projectsUsing = new LinkedHashSet<>();

    // =========================================================================
    // API
    // =========================================================================
    @Override
    public int compareTo(final EntityDTO other) {
        return String.valueOf(name).compareTo(other.getName());
    }

    // =========================================================================
    // GETTERS & SETTERS
    // =========================================================================
    public EntityDTO addProjectUsing(final String name) {
        if (projectsUsing == null) {
            projectsUsing = new LinkedHashSet<>();
        }
        if (name != null) {
            projectsUsing.add(name);
        }
        return this;
    }

    @java.lang.SuppressWarnings("all")
    EntityDTO(final String name, final String payload, final Set<String> projectsUsing) {
        this.name = name;
        this.payload = payload;
        this.projectsUsing = projectsUsing;
    }


    @java.lang.SuppressWarnings("all")
    public static class EntityDTOBuilder {
        @java.lang.SuppressWarnings("all")
        private String name;
        @java.lang.SuppressWarnings("all")
        private String payload;
        @java.lang.SuppressWarnings("all")
        private Set<String> projectsUsing;

        @java.lang.SuppressWarnings("all")
        EntityDTOBuilder() {
        }

        @java.lang.SuppressWarnings("all")
        public EntityDTO.EntityDTOBuilder name(final String name) {
            this.name = name;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public EntityDTO.EntityDTOBuilder payload(final String payload) {
            this.payload = payload;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public EntityDTO.EntityDTOBuilder projectsUsing(final Set<String> projectsUsing) {
            this.projectsUsing = projectsUsing;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public EntityDTO build() {
            return new EntityDTO(this.name, this.payload, this.projectsUsing);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "EntityDTO.EntityDTOBuilder(name=" + this.name + ", payload=" + this.payload + ", projectsUsing=" + this.projectsUsing + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static EntityDTO.EntityDTOBuilder builder() {
        return new EntityDTO.EntityDTOBuilder();
    }

    @java.lang.SuppressWarnings("all")
    public EntityDTO.EntityDTOBuilder toBuilder() {
        return new EntityDTO.EntityDTOBuilder().name(this.name).payload(this.payload).projectsUsing(this.projectsUsing);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof EntityDTO)) return false;
        final EntityDTO other = (EntityDTO) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$name = this.getName();
        final java.lang.Object other$name = other.getName();
        if (this$name == null ? other$name != null : !this$name.equals(other$name)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof EntityDTO;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $name = this.getName();
        result = result * PRIME + ($name == null ? 43 : $name.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "EntityDTO(name=" + this.getName() + ", payload=" + this.getPayload() + ", projectsUsing=" + this.getProjectsUsing() + ")";
    }

    @java.lang.SuppressWarnings("all")
    public String getName() {
        return this.name;
    }

    @java.lang.SuppressWarnings("all")
    public String getPayload() {
        return this.payload;
    }

    @java.lang.SuppressWarnings("all")
    public Set<String> getProjectsUsing() {
        return this.projectsUsing;
    }
}
